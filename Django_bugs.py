import signal
import requests
import sys
import os
import json
import random
import afl


def main(input):
    base_url = 'http://127.0.0.1:8000/'
    
    # IF FUZZED INPUT IS "GET"
    if(input[0] == "GET"):
        url = ''
        endpoint_url = ''
         
        if(input[1] != ""):
            endpoint_url = input[1]
        
        if(input[2] != ""):
            endpoint_url += input[2]

        url = base_url + endpoint_url

        # Define the headers with cookies
        headers = {
            'Cookie': 'csrftoken=jr6DahhKuGKgXX6Dxb3F4iR9FgiiQkAL; sessionid=bvlvh8bqcwhbzr2eqqk3blv9x5b68q4r'
        }

        try:
            # Send a GET request with the defined headers and cookies
            response = requests.get(url, headers=headers)

            # Check if the request was successful (status code 200)
            if response.status_code == 200:
                print("Request successful!")
                # Process the response data as needed
                # print("Response:")
                # print(response.text)
            else:
                print(f"Request failed with status code: {response.status_code}")
        except requests.exceptions.RequestException as e:
            print("Request failed:", e)
            
    # IF FUZZED INPUT IS "POST"
    if(input[0] == "POST"):
        
        if(input[1] != ""):
            endpoint_url = input[1]

        url = base_url + endpoint_url

        if(input[2] != ""):
            random_name = input[2]
            random_info = input[2]
            random_price = input[2]
        else:
            random_name = ""
            random_info = ""
            random_price = ""

        # Define the form data with random values
        form_data = {
            'name': random_name,
            'info': random_info,
            'price': random_price
        }

        # Define the headers with cookies
        headers = {
            'Cookie': 'csrftoken=5vvs6151ScRQGpdMlKAf8FAFERO67MmK; sessionid=c35o5m7xkymbjdtcu9k916f8jfj2f8x7', # Optional
        }

        try:
            print(json.dumps(form_data))
            response = requests.post(url, headers=headers, data=json.dumps(form_data))

            # Check if the request was successful (status code 200)
            if response.status_code == 200:
                print("Request successful!")
                # Process the response data as needed
                # print("Response:")
                # print(response.text)

            else:
                print(f"Request failed with status code: {response.status_code}")
        except requests.exceptions.RequestException as e:
            print("Request failed:", e)
            
    if(input[0] == "PUT"):
        base_url = 'http://127.0.0.1:8000/'

        endpoint_url = input[1]

        url = base_url + endpoint_url
        
        # Generate random values for the input fields
        random_value = ''.join(random.choices('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', k=4))
        
        key = input[2]
        value = random_value

        headers = {
            'Cookie': 'csrftoken=5vvs6151ScRQGpdMlKAf8FAFERO67MmK; sessionid=c35o5m7xkymbjdtcu9k916f8jfj2f8x7', # Optional
        }
        
        try:
            # Check if the request was successful (status code 200)
            #response = requests.post(url, headers=headers, data=json.dumps(form_data))
            response = requests.put(url, headers=headers, data ={key:value})
            
            if response.status_code == 200:
                print("Request successful!")
                # Process the response data as needed
                # print("Response:")
                # print(response.text)

            else:
                print(f"Request failed with status code: {response.status_code}")
        except requests.exceptions.RequestException as e:
            print("Request failed:", e)
            
    # os._exit(0)
    
    

if __name__ == '__main__':
    # afl.init()
    # a = sys.stdin.read()
    b = [#ORI
        "GET,¬¨abc",
        "GET,,√°bc",
        "POST,√°ccounts/login/,abcde",
        "POST,accounts/login/¬¨abcde",
        "POST,",
        "PUT,√°ccounts/login/,e",
        "PUT,accounts/login/,√•",
        "ÂÅïÂê¨ÊÖ£ÊçØÁïÆ ‚Ω≤Á©ßÁ©≥Áë•ÁàØ‚±°ÊäöÊë•",
        "GET,¬¨ab#",
        "GET,#√°bc",
        "GET,%√°bc",
        "GET,%ab√£",
        "GET,%aJ√£",
        "GET,?√°b#",
        "POST,√°ccs/login%4abc",
        "PUT,/a%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%POST,%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<%%-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%/%%%%%%%%%%%%%%%√ø%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%?%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%<%%-%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%ccou%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%<%%-%%%%%%%%%%%%%%%%%%/%%%%%%%%%%%%%%√ø%%%%%‚Ç¨ %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%6%%%%%%%%%%%d %%%%%%%%/%%%%%%%%%%%%%%%√ø%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%6%%%%%%%%%%%d %%%%%%%%%%%%%%%%%%%%%Fbc",
        "PUT,/ccouYtUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU UUUUUhUUioginUUUUUUUUUUab#dUUUUUUUUUUUUUUUUUUUUUU,%ccouUUUiUUUcUUUUUUUUUUUUUUUUUUccouUUUUUUUUUUUUUUUUUUUUUiUUUUUUUUUUUUUUUUUUUUUUUUUUaUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU¬¨UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUvUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUoUUUUUUUUUUUUUUUUUUUUUUUUUUU√∫  √∫UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUKUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUKUUUUUUUUUUU UUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU UUUUUUUUUUUnUUUUUUUUUs/login/, ",
        "GET,¬¨abc",
        "GET,,√°bc",
        "PUT,√§atatb/product/,DVtaCp",
        "PUT,datatb/product/,√ÑVtaCp",
        "POST,√°ccounts/login/,abcde",
        "POST,accounts/login/¬¨abcde",
        "GET,¬¨ab#",
        "GET,#√°bc",
        "GET,%√°bc",
        "GET,%ab√£",
        "PUT,√§atatb%product/,Cp",
        "PUT,datatb%product/,√Ép",
        "PUT,datatb;pct/,√Ép",
        "PUT,datatb;pct,√¨Cp"
        "PUT,	√ø?",
        "POST,",
        "GET,?√°b#", 
        "PUT,√§atatb/product%4DVta",
        '''PUT,dg%%'?%%%%%%%%%@%%%%%%%%:ounSs%%tb/%UT,dg%%'?%%%%%%%%%@%%%%%%%%ct/ Ss%%tb/%%%%%%%%%%√®%%%%%%%+%%%%%%%%%"%%%%%%%%%%%%%%%DVtA''',
        #ORI

        #PSO
        "GET,¬¨abc",
        "GET,,√°bc",
        "PUT,√§atatb/product/,NweO",
        "PUT,datatb/product/,√éweO",
        "POST,√°ccounts/login/,abcde",
        "POST,accounts/login/¬¨abcde",
        "GET,¬¨ab#",
        "GET,#√°bc",
        "GET,%√°bc",
        "GET,%ab√£",
        "PUT,√§atatb%product/,NweO",
        "PUT,datatb%product/,√éweO",
        "PUT,datatb;pct/,√éweO",
        "PUT,datatb;pct,√¨NweO",
        "GET,?√°b#",
        "POST,,ccounts/login/,abcde",
        "PUT,D`4#pb;pct/,√éwe√è",
        "PUT,dqtatf?pro/,w√•O"
        "GET,¬¨abc",
        "GET,,√°bc",
        "PUT,√§atatb/product/,DVtaNweOCp",
        "PUT,datatb/product/,√ÑVtaNweOCp",
        "POST,√°ccounts/login/,abcde",
        "POST,accounts/login/¬¨abcde",
        "GET,¬¨ab#",
        "GET,#√°bc",
        "GET,%√°bc",
        "GET,%ab√£",
        "PUT,√§atatb%product/,DVtaCp",
        "PUT,datatb%product/,√ÑVtaCp",
        "PUT,tb;product/,√Ép",
        "PUT,tb;product,√¨Cp",
        "GET,?√°b#",
        "PUT,√£t%4DVta",
        "POST,,ccount,abc",
        "ÂÅïÂê¨‰ë°Áë°Áë¢‚Ω∞  ‚ç¥‚º¨¬Ä",
        "PUT,ct/luntw?lngin/,√°bcde",
        "GET,¬¨abc",
        "GET,,√°bc",
        "POST,√°ccounts/login/,abc",
        "POST,accounts/login/¬¨abc",
        "PUT,√°ccounts/login/,abcd",
        "PUT,accounts/login/,√°bcd",
        "GET,¬¨ab#",
        "GET,#√°bc",
        "GET,%√°bc",
        "GET,%ab√£",
        "GET,?√°bc",
        "POST,,cc,abc",
        "POST,√°ccs%login/,abc",
        "POST,√°ccgin%4abc",
        "PUT,`ccoin/,√°bcd",
        "Âïê‚±î‚ç°ÊΩ£Êπ•Áç¥ÁàØÊùµÁç©‚∞Ø ¬Ä"
        #PSO
    ]
    counter = 0

    for a in b:

        input = a.split(',')
        
        if(len(input) != 3):
            if len(input) == 1:
                input.append("")
                input.append("")
            if len(input) == 2:
                input.append("")

        counter += 1

        print("Bug {} seed:".format(counter) + a)
        main(input)
        print("============")

    os._exit(0)